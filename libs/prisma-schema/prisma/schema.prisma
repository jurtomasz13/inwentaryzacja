// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Unit {
  PIECE
  KILOGRAM
  LITER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products  Product[]
  Room Room[]
  Order Order[]
  inventories Inventory[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  code        String   @unique
  unit        Unit     @default(PIECE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  userId      String   

  OrderItem OrderItem[]

  InventoryItem InventoryItem[]
}

model Room {
  id          String   @id @default(cuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  userId      String

  inventoryItems InventoryItem[]
}

model Inventory {
  id          String   @id @default(cuid())
  date        DateTime
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  userId      String

  inventoryItems InventoryItem[]
  orders Order[]
}

model InventoryItem {
  id          String   @id @default(cuid())
  quantity    Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  product     Product  @relation(fields: [productId], references: [id])
  productId   String

  room        Room     @relation(fields: [roomId], references: [id])
  roomId      String

  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId String
}

model Order {
  id          String   @id @default(cuid())
  date        DateTime
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  userId      String

  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId String

  orderItems OrderItem[]
}

model OrderItem {
  id          String   @id @default(cuid())
  quantity    Float

  product     Product  @relation(fields: [productId], references: [id])
  productId   String

  order       Order    @relation(fields: [orderId], references: [id])
  orderId     String
}
